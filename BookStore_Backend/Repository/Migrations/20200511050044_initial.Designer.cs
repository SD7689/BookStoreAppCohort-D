// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(BookStoreDBContext))]
    [Migration("20200511050044_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutherName")
                        .IsRequired();

                    b.Property<string>("BookImage")
                        .IsRequired();

                    b.Property<double>("BookPrice");

                    b.Property<string>("BookTitle")
                        .IsRequired();

                    b.Property<int>("NumberOfBooks");

                    b.HasKey("BookID");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Model.Cart", b =>
                {
                    b.Property<int>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookID");

                    b.HasKey("CartID");

                    b.HasIndex("BookID");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Model.CustomerAdress", b =>
                {
                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Citytown")
                        .IsRequired();

                    b.Property<int>("CustomerId");

                    b.Property<string>("FullName")
                        .IsRequired();

                    b.Property<string>("Landmark")
                        .IsRequired();

                    b.Property<int>("PhoneNumber");

                    b.Property<int>("Pincode");

                    b.HasKey("Email");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Model.Cart", b =>
                {
                    b.HasOne("Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID");
                });
#pragma warning restore 612, 618
        }
    }
}
